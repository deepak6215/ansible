---
- hosts: all
  become: yes
  tasks:
#### conditons
    - name: Update apt cache
      apt: update_cache=yes cache_valid_time=3600
      ignore_errors: yes
      
    - name: install a webserver on ubuntu
      apt:
        name: apache2
        state: latest
      when: ansible_distribution == 'Ubuntu'

    - name: stop the service
      service:
         name: apache2
         state: started
      when: ansible_distribution == 'Ubuntu'
      
    - name: install a git-client on ubuntu
      apt:
        name: git
        state: latest
      when: ansible_distribution == 'Ubuntu'
      
   - name: install a vim on ubuntu
      apt:
        name: vim
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a tcpdump on ubuntu
      apt:
        name: tcpdump
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a screen on ubuntu
      apt:
        name: screen
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a unrar on ubuntu
      apt:
        name: unrar
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a htop on ubuntu
      apt:
        name: htop
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a net-tools on ubuntu
      apt:
        name: net-tools
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a dos2unix on ubuntu
      apt:
        name: dos2unix
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'
      
  - name: install a expect on ubuntu
      apt:
        name: expect
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a ntp on ubuntu
      apt:
        name: ntp
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a curl on ubuntu
      apt:
        name: curl
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a nodejs on ubuntu
      apt:
        name: nodejs
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a nmap on ubuntu
      apt:
        name: nmap
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'

    - name: install a vsftpd on ubuntu
      apt:
        name: vsftpd
        state: latest
      ignore_errors: yes
      when: ansible_distribution == 'Ubuntu'
      
    - name: clone of a single branch
      ansible.builtin.git:
        repo: https://github.com/deepak6215/iyyermalai-rasp-packages.git
        dest: /home/iplon/repos
        clone: yes
        update: yes
      ignore_errors: yes

    - name: Fix 'support_tools' permissions
      file: path=/home/iplon/repos owner=root group=root mode=0777 state=directory recurse=yes
      ignore_errors: yes

    - name: Go to the directory
      ignore_errors: yes
      action: shell cd /home/iplon/repos/iyyermalai-rasp-packages
      
    - name: Execute the iot script
      shell:
            /home/iplon/repos/iyyermalai-rasp-packages/rasp_basic_package.sh
      ignore_errors: yes

    - name: Install nessesary package
      apt:
        name: apt-transport-https
        state: present
        update_cache: yes

    - name: add grafana gpg key
      shell: curl https://packages.grafana.com/gpg.key | sudo apt-key add -

    - name: add grafana repo
      apt_repository:
        repo: https://dl.grafana.com/oss/release/grafana_9.0.7_arm64.deb
        state: present
        filename: grafana

    - name: Install grafana
      apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Enable and start grafana service
      service:
        name: grafana-server
        enabled: yes
        state: started

    - name: Import InfluxDB GPG signing key
      apt_key: url=https://repos.influxdata.com/influxdb.key state=present
      
    - name: Add InfluxDB repository
      apt_repository: repo='deb https://dl.influxdata.com/influxdb/releases/influxdb_1.8.5_arm64.deb' state=present
      
    - name: Install InfluxDB packages
      apt: name=influxdb state=present
      
    - name: Start the InfluxDB service
      service: name=influxdb state=restarted
      
      
